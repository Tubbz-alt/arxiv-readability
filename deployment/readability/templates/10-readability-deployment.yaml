apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: "{{ default "readability" .Values.deployment_name }}"
  namespace: "{{ .Values.namespace }}"
  labels:
    subsystem: "{{ .Values.labels.subsystem }}"
    container: readability
    service-group: ui
    log-style: uwsgi
spec:
  replicas: 1
  template:
    metadata:
      labels:
        subsystem: "{{ .Values.labels.subsystem }}"
        container: readability
        service-group: ui
        log-style: uwsgi
      annotations:
        prometheus.io/scrape: 'true'
    spec:
      containers:
      - name: arxiv-readability
        image: arxiv/readability:{{ .Values.imageTag }}
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
        env:
        - name: DATABASE_URL
          value: "{{ .Values.database_url }}"
        - name: CELERY_BROKER_URL
          value: "redis://{{ .Values.redis.host }}:{{ .Values.redis.port}}"
        - name: CELERY_RESULT_BACKEND
          value: "redis://{{ .Values.redis.host }}:{{ .Values.redis.port}}"
        - name: SECRET_KEY
          value: "{{ .Values.secret_key }}"
        - name: SCRIPT_NAME
          value: "{{ .Values.script_name }}"
        - name: FORCE_SCRIPT_NAME
          value: "{{ .Values.script_name }}"
        - name: ALLOWED_HOSTS
          value: "*"
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: "{{ default "readability" .Values.deployment_name }}-worker"
  namespace: "{{ .Values.namespace }}"
  labels:
    subsystem: "{{ .Values.labels.subsystem }}"
    container: readability-worker
    service-group: backend
    log-style: celery
spec:
  replicas: 1
  template:
    metadata:
      labels:
        subsystem: "{{ .Values.labels.subsystem }}"
        container: readability-worker
        service-group: backend
        log-style: celery
      annotations:
        prometheus.io/scrape: 'true'
    spec:
      containers:
      - name: arxiv-readability-worker
        image: arxiv/readability:{{ .Values.imageTag }}
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
        command:
          - "sh"
          - "-c"
          - celery -A arxiv_html worker -l info
        env:
        - name: DATABASE_URL
          value: "{{ .Values.database_url }}"
        - name: CELERY_BROKER_URL
          value: "redis://{{ .Values.redis.host }}:{{ .Values.redis.port}}"
        - name: CELERY_RESULT_BACKEND
          value: "redis://{{ .Values.redis.host }}:{{ .Values.redis.port}}"
        - name: SECRET_KEY
          value: "{{ .Values.secret_key }}"
        - name: ALLOWED_HOSTS
          value: "*"
